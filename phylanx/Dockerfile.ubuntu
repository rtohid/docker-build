# Copyright (c) 2021 R. Tohid (@rtohid)
#
# Distributed under the Boost Software License, Version 1.0. (See a copy at
# http://www.boost.org/LICENSE_1_0.txt)

FROM ubuntu:20.04

ARG CPUS=16
ARG BUILD_TYPE=Debug

ENV DEBIAN_FRONTEND noninteractive

RUN apt update
RUN apt install -y sudo

# OS Packages
RUN apt install -y python3 python3 python3-distutils python3-tk python3-pip
RUN apt install -y build-essential gdb
RUN apt install -y cmake automake autoconf libtool lld
RUN apt install -y libpng-dev libjpeg-dev
RUN apt install -y zlib1g-dev libz-dev
RUN apt install -y git vim
RUN apt install -y wget curl
RUN apt install -y bash-completion
RUN apt install -y graphviz-dev
RUN apt install -y libhwloc-dev
RUN apt install -y libboost-all-dev
RUN apt install -y libpapi-dev
RUN apt install -y libhdf5-dev
RUN apt install -y libffi-dev
RUN apt install -y libsqlite-dev

## MPI
RUN apt install -y openmpi-bin openmpi-common libopenmpi-dev
RUN apt install -y openssh-client openssh-server

## Python Packages
RUN pip3 install pytest pylint yapf flake8 astpretty pybind11 numpy jupyter


WORKDIR /git
RUN git clone --depth 1 https://github.com/STEllAR-GROUP/hpx.git 
WORKDIR /git/hpx/build
RUN cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
  -DHPX_WITH_PARCELPORT_MPI=ON \
  -DHPX_WITH_MALLOC=system \
  -DHPX_WITH_MORE_THAN_64_THREADS=ON \
  -DHPX_WITH_MAX_CPU_COUNT=80 \
  -DHPX_WITH_EXAMPLES=OFF \
  .. && \
  make -j ${CPUS} install

WORKDIR /git
RUN git clone --depth 1 https://github.com/pybind/pybind11.git
WORKDIR /git/pybind11/build
RUN cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} .. && make -j ${CPUS} install 

RUN apt install -y libblas-dev liblapack-dev

WORKDIR /git
RUN git clone --depth 1 https://bitbucket.org/blaze-lib/blaze.git
WORKDIR /git/blaze/build
RUN cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} .. && make -j ${CPUS} install

WORKDIR /git
RUN git clone --depth 1 https://github.com/STEllAR-GROUP/blaze_tensor.git
WORKDIR /git/blaze_tensor/build
RUN cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} .. && make -j ${CPUS} install



WORKDIR /home/stellar/git
RUN git clone https://github.com/STEllAR-GROUP/phylanx.git
WORKDIR /home/stellar/git/phylanx/build
RUN cmake                                                                      \
        -DPHYLANX_WITH_BLAZE_TENSOR=ON                                         \
        -DPHYLANX_WITH_EXAMPLES=OFF                                            \
        -DPHYLANX_WITH_TESTS=OFF                                               \
        -DCMAKE_BUILD_TYPE=${BUILD_TYPE}                                       \
        -DHPX_WITH_MALLOC=tcmalloc                                             \
        -DCMAKE_CXX_STANDARD=17                                                \
        -DHPX_DIR=/usr/local/lib/cmake/HPX                                     \
        -Wdev                                                                  \
        ..  &&                                                                 \
    make -j ${CPUS}
    
RUN adduser --disabled-password --gecos '' stellar
RUN adduser stellar sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
RUN chown -R stellar:stellar /home/stellar

USER stellar
WORKDIR /tmp/
RUN sh -c "$(wget https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh -O -)"

RUN echo "export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:/home/root/phylanx/build/python/build/lib.linux-x86_64-3.8/phylanx/python/build/lib.linux-x86_64-3.8/phylanx/" >> /home/stellar/.bashrc
RUN echo "export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:/home/root/phylanx/build/lib" >> /home/stellar/.bashrc
RUN echo "export PYTHONPATH=\$PYTHONPATH::/home/stellar/git/phylanx/build/python/build/lib.linux-x86_64-3.8" >> /home/stellar/.bashrc
RUN sed -i 's/OSH_THEME="font"/OSH_THEME="mairan"/g' /home/stellar/.bashrc

WORKDIR /home/stellar/
